apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: electromart
  labels:
    app: prometheus
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
        version: v1
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.47.0
        ports:
        - containerPort: 9090
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--storage.tsdb.retention.time=200h'
        - '--web.enable-lifecycle'
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-storage
          mountPath: /prometheus
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: electromart
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: electromart
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: electromart
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      # - "first_rules.yml"
      # - "second_rules.yml"

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'frontend'
        static_configs:
          - targets: ['frontend:3000']
        metrics_path: /metrics

      - job_name: 'api-gateway'
        static_configs:
          - targets: ['api-gateway:8000']
        metrics_path: /metrics

      - job_name: 'user-service'
        static_configs:
          - targets: ['user-service:8002']
        metrics_path: /metrics

      - job_name: 'product-service'
        static_configs:
          - targets: ['product-service:8001']
        metrics_path: /metrics

      - job_name: 'order-service'
        static_configs:
          - targets: ['order-service:8003']
        metrics_path: /actuator/prometheus

      - job_name: 'payment-service'
        static_configs:
          - targets: ['payment-service:8004']
        metrics_path: /metrics

      - job_name: 'search-service'
        static_configs:
          - targets: ['search-service:8005']
        metrics_path: /metrics

      - job_name: 'notification-service'
        static_configs:
          - targets: ['notification-service:8006']
        metrics_path: /metrics
