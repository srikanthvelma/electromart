version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
    depends_on:
      - api-gateway
    networks:
      - electromart-network
    volumes:
      - ./services/frontend:/app
      - /app/node_modules

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - PORT=8000
      - JWT_SECRET=your-super-secret-jwt-key
      - USER_SERVICE_URL=http://user-service:8002
      - PRODUCT_SERVICE_URL=http://product-service:8001
      - ORDER_SERVICE_URL=http://order-service:8003
      - PAYMENT_SERVICE_URL=http://payment-service:8004
      - SEARCH_SERVICE_URL=http://search-service:8005
      - NOTIFICATION_SERVICE_URL=http://notification-service:8006
    depends_on:
      - user-service
      - product-service
      - order-service
      - payment-service
      - search-service
      - notification-service
    networks:
      - electromart-network
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules

  # User Service
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - NODE_ENV=development
      - PORT=8002
      - MONGODB_URI=mongodb://mongodb:27017/electromart_users
      - JWT_SECRET=your-super-secret-jwt-key
      - JWT_EXPIRES_IN=24h
    depends_on:
      - mongodb
    networks:
      - electromart-network
    volumes:
      - ./services/user-service:/app
      - /app/node_modules

  # Product Service
  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/electromart_products
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - postgres
      - elasticsearch
    networks:
      - electromart-network
    volumes:
      - ./services/product-service:/app

  # Order Service
  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/electromart_orders
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - USER_SERVICE_URL=http://user-service:8002
      - PRODUCT_SERVICE_URL=http://product-service:8001
      - PAYMENT_SERVICE_URL=http://payment-service:8004
      - NOTIFICATION_SERVICE_URL=http://notification-service:8006
    depends_on:
      - postgres
      - user-service
      - product-service
      - payment-service
      - notification-service
    networks:
      - electromart-network

  # Payment Service
  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - NODE_ENV=development
      - PORT=8004
      - REDIS_URL=redis://redis:6379
      - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
      - STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
    depends_on:
      - redis
    networks:
      - electromart-network
    volumes:
      - ./services/payment-service:/app
      - /app/node_modules

  # Search Service
  search-service:
    build:
      context: ./services/search-service
      dockerfile: Dockerfile
    ports:
      - "8005:8005"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - PRODUCT_SERVICE_URL=http://product-service:8001
    depends_on:
      - elasticsearch
      - product-service
    networks:
      - electromart-network
    volumes:
      - ./services/search-service:/app

  # Notification Service
  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    ports:
      - "8006:8006"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/electromart_notifications
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=your-email@gmail.com
      - SMTP_PASS=your-app-password
    depends_on:
      - mongodb
    networks:
      - electromart-network
    volumes:
      - ./services/notification-service:/app

  # Databases
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=electromart
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - electromart-network

  mongodb:
    image: mongo:6.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - electromart-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - electromart-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - electromart-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - electromart-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - electromart-network

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  elasticsearch_data:
  prometheus_data:
  grafana_data:

networks:
  electromart-network:
    driver: bridge
